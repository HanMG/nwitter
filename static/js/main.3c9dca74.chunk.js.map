{"version":3,"sources":["fbase.js","components/AuthForm.js","components/SocialLink.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","SocialLink","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","style","marginBottom","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","to","marginRight","marginLeft","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c9dca74.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n\r\n  export const dbService = firebase.firestore();\r\n\r\n  export const storageService = firebase.storage();","import { authService } from 'fbase'\r\nimport React, { useState } from 'react'\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [newAccount, setNewAccount] = useState(true)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const onChange = (event) => {\r\n        console.log(event.target.name)\r\n        const {target: {name, value}} = event\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        } else if(name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();        \r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                // create new account, and auto login\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            }else {\r\n                // log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email, password\r\n                )\r\n            }\r\n            console.log(data)\r\n        } catch(error) {\r\n            setError(error.message)\r\n        }        \r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required \r\n                    value={password} \r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Log In\"} \r\n                />\r\n                <div>\r\n                     {error && <span className=\"authError\">{error}</span>}   \r\n                </div>\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import { authService, firebaseInstance } from 'fbase'\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {  \r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nconst SocialLink = () => {\r\n    const onSocialClick = async(event) => {\r\n        console.log(event.target.name)\r\n        const {\r\n            target:{name},\r\n        } = event\r\n\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider()\r\n        }\r\n        await authService.signInWithPopup(provider)        \r\n    }\r\n\r\n    return (\r\n        <div>            \r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>            \r\n            </div>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialLink\r\n","import React from 'react'\r\nimport AuthForm from 'components/AuthForm'\r\nimport SocialLink from 'components/SocialLink'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n    faTwitter,    \r\n} from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nconst Auth = () => {    \r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <SocialLink />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth","import { dbService, storageService } from 'fbase'\r\nimport React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are yu sure you want to delete this?\")        \r\n        if(ok) {\r\n            //delete\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            // if image is exist\r\n            if(nweetObj.attachmentUrl !== \"\"){\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete()\r\n            }            \r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev)\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault()        \r\n        //update\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        })\r\n        setEditing(false)\r\n    }\r\n    const onChange = (event) => {\r\n        const {target: {value},\r\n        } = event\r\n        setNewNweet(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n        {editing ? (\r\n            <>\r\n                {isOwner && (\r\n                    <>\r\n                     <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            onChange={onChange}\r\n                            required \r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>                \r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>            \r\n                    </>\r\n                )}\r\n            </>\r\n            ) : (\r\n            <>\r\n                <h4>{nweetObj.text}</h4>   \r\n                {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                { isOwner && (\r\n                    <div className=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet","import { dbService, storageService } from \"fbase\"\r\nimport React, { useState } from \"react\"\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\")\r\n    const [attachment, setAttachment] = useState(\"\")    \r\n    \r\n    const onSubmit = async(event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault()\r\n        let attachmentUrl = \"\"\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL()            \r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj)\r\n        setNweet(\"\")\r\n        setAttachment(\"\")\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{ value }\r\n        } = event\r\n        setNweet(value)\r\n    }\r\n    // file preview\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files}\r\n        } = event\r\n        const theFile = files[0];\r\n        const reader = new FileReader()\r\n        reader.onload = (finishedEvent) => {\r\n            const {\r\n                    currentTarget: { result }\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        } \r\n        if(theFile) {\r\n            reader.readAsDataURL(theFile)\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\")\r\n\r\n    return (\r\n        <div>            \r\n            <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n                <input  \r\n                    id=\"attach-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                    style={{\r\n                    opacity: 0,\r\n                    }}\r\n                />                \r\n                {attachment && (                    \r\n                    <div className=\"factoryForm__attachment\">\r\n                        <img\r\n                            src={attachment}\r\n                            style={{\r\n                                backgroundImage: attachment,\r\n                            }}\r\n                        />\r\n                        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </form>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NweetFactory","import React, { useEffect, useState } from 'react'\r\nimport Nweet from 'components/Nweet'\r\nimport { dbService } from 'fbase'\r\nimport NweetFactory from 'components/NweetFactory'\r\n\r\n\r\nconst Home = ({ userObj }) => {    \r\n    const [nweets, setNweets] = useState([])\r\n   \r\n    useEffect(() => {        \r\n        dbService.collection(\"nweets\").orderBy(\"createAt\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setNweets(nweetArray)\r\n        })\r\n    },[]) \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj ={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet => \r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Navigation = ({ userObj }) => \r\n    <nav>\r\n        <ul className=\"navUl\">\r\n            <li>\r\n                <Link \r\n                    to=\"/\" \r\n                    style={{\r\n                        marginRight: 10\r\n                    }}\r\n                    className=\"naviLink\"\r\n                >                    \r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />                    \r\n                </Link>\r\n                <div className=\"navSpan\">\r\n                    <span>\r\n                        Home\r\n                    </span>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,                       \r\n                    }}\r\n                    className=\"naviLink\"\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <div className=\"navSpan\">\r\n                    <span>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </div>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\nexport default Navigation","import { authService, dbService } from 'fbase'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\")        \r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setNewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault()\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            })\r\n            refreshUser()\r\n        }\r\n    }\r\n\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createAt\")\r\n            .get()\r\n        console.log(nweets.docs.map(doc =>doc.data()))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyNweets()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                autoFocus\r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n                className=\"formInput\"\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Auth from 'routes/Auth'\r\nimport Home from 'routes/Home'\r\nimport Navigation from 'components/Navigation'\r\nimport Profile from 'routes/Profile'\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {    \r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>                   \r\n                    </div>\r\n                )                \r\n                    : (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                         <Auth />\r\n                    </Route>                  \r\n                    </>\r\n                    )                    \r\n                }\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {    \n  const [init, setInit] = useState(false)  \n  const [userObj, setUserObj] = useState(null)\n  useEffect(() => {\n    // firebase's authstateChange를 통해 변화를 감지    \n    authService.onAuthStateChanged((user) => {\n      if(user) {        \n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      }else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  }, [])  \n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n  return (\n  <div>\n    {init ? \n      <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)}\n        userObj={userObj} \n      /> : \"Initializing...\" \n    }    \n    <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n  </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}